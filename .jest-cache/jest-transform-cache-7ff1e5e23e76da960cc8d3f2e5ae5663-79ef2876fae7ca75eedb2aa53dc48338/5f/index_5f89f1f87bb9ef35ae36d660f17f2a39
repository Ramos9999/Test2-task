9a91d51c0bb2c697a4c4432c5c1db332
/* istanbul ignore next */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var
/* istanbul ignore next */
_react = _interopRequireDefault(require("react"));
var
/* istanbul ignore next */
_ToggleInputModule = _interopRequireDefault(require("./ToggleInput.module.scss"));
var
/* istanbul ignore next */
_Logo = _interopRequireDefault(require("../Logo"));
/* istanbul ignore next */
const _excluded = ["options", "selectedOption", "setOption"];
var _jsxFileName = "C:\\Users\\DELL\\Desktop\\Test2-task\\components\\ToggleInput\\index.tsx";
var __jsx = _react.default.createElement;
function cov_2evln9jmvc() {
  var path = "C:\\Users\\DELL\\Desktop\\Test2-task\\components\\ToggleInput\\index.tsx";
  var hash = "fee438fbb2befbd98a4b78055a5eb85b8f8c5cf4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DELL\\Desktop\\Test2-task\\components\\ToggleInput\\index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "1": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 40,
          column: 4
        }
      },
      "2": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 37,
          column: 17
        }
      },
      "3": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 31
        }
      },
      "4": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 21,
            column: 20
          }
        },
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 37,
            column: 17
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 19
          },
          end: {
            line: 26,
            column: 20
          }
        },
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 29,
            column: 11
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 35,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 30,
            column: 36
          }
        }, {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 34,
            column: 14
          }
        }],
        line: 30
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fee438fbb2befbd98a4b78055a5eb85b8f8c5cf4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2evln9jmvc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2evln9jmvc();
cov_2evln9jmvc().s[0]++;
const ToggleInput =
/* istanbul ignore next */
_ref => {
  /* istanbul ignore next */
  let {
      options,
      selectedOption,
      setOption
    } = _ref,
    restprops = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  /* istanbul ignore next */
  cov_2evln9jmvc().f[0]++;
  cov_2evln9jmvc().s[1]++;
  return /* istanbul ignore next */__jsx(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  (0, _extends2.default)({
    className:
    /* istanbul ignore next */
    _ToggleInputModule.
    /* istanbul ignore next */
    default.container
  }, restprops, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 20,
      columnNumber: 5
    }
  }), options.map(option => {
    /* istanbul ignore next */
    cov_2evln9jmvc().f[1]++;
    cov_2evln9jmvc().s[2]++;
    return /* istanbul ignore next */__jsx(
    /* istanbul ignore next */
    "button",
    /* istanbul ignore next */
    {
      key: option,
      /* istanbul ignore next */
      "data-testid": option,
      className:
      /* istanbul ignore next */
      _ToggleInputModule.
      /* istanbul ignore next */
      default.toggleButton,
      onClick: e => {
        /* istanbul ignore next */
        cov_2evln9jmvc().f[2]++;
        cov_2evln9jmvc().s[3]++;
        e.preventDefault();
        /* istanbul ignore next */
        cov_2evln9jmvc().s[4]++;
        setOption(option);
      },
      __self: void 0,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 22,
        columnNumber: 9
      }
    },
    /* istanbul ignore next */
    (cov_2evln9jmvc().b[0][0]++, selectedOption === option) &&
    /* istanbul ignore next */
    (cov_2evln9jmvc().b[0][1]++,
    /* istanbul ignore next */
    __jsx(
    /* istanbul ignore next */
    _Logo.
    /* istanbul ignore next */
    default,
    /* istanbul ignore next */
    {
      className:
      /* istanbul ignore next */
      _ToggleInputModule.
      /* istanbul ignore next */
      default.checkBoxLogo,
      srcLogo: '/checkmark.svg',
      __self: void 0,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 31,
        columnNumber: 13
      }
    })), option);
  }));
};
/* istanbul ignore next */
var _default = ToggleInput;
/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9Ub2dnbGVJbnB1dE1vZHVsZSIsIl9Mb2dvIiwiX2V4Y2x1ZGVkIiwiX2pzeEZpbGVOYW1lIiwiX19qc3giLCJkZWZhdWx0IiwiY3JlYXRlRWxlbWVudCIsImNvdl8yZXZsbjlqbXZjIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIlRvZ2dsZUlucHV0IiwiX3JlZiIsIm9wdGlvbnMiLCJzZWxlY3RlZE9wdGlvbiIsInNldE9wdGlvbiIsInJlc3Rwcm9wcyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJfZXh0ZW5kczIiLCJjbGFzc05hbWUiLCJzdHlsZXMiLCJjb250YWluZXIiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImNvbHVtbk51bWJlciIsIm1hcCIsIm9wdGlvbiIsImtleSIsInRvZ2dsZUJ1dHRvbiIsIm9uQ2xpY2siLCJlIiwicHJldmVudERlZmF1bHQiLCJjaGVja0JveExvZ28iLCJzcmNMb2dvIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiaW5kZXgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEZWZhdWx0UHJvcHMgZnJvbSAnQC90eXBpbmdzL0RlZmF1bHRQcm9wcyc7XHJcbmltcG9ydCBSZWFjdCwgeyBEaXNwYXRjaCwgU2V0U3RhdGVBY3Rpb24gfSBmcm9tICdyZWFjdCc7XHJcblxyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vVG9nZ2xlSW5wdXQubW9kdWxlLnNjc3MnO1xyXG5pbXBvcnQgTG9nbyBmcm9tICcuLi9Mb2dvJztcclxuXHJcbmludGVyZmFjZSBJVG9nZ2xlSW5wdXQgZXh0ZW5kcyBEZWZhdWx0UHJvcHMge1xyXG4gIG9wdGlvbnM6IHN0cmluZ1tdO1xyXG4gIHNlbGVjdGVkT3B0aW9uOiBzdHJpbmc7XHJcbiAgc2V0T3B0aW9uOiBEaXNwYXRjaDxTZXRTdGF0ZUFjdGlvbjxzdHJpbmc+PjtcclxufVxyXG5cclxuY29uc3QgVG9nZ2xlSW5wdXQgPSAoe1xyXG4gIG9wdGlvbnMsXHJcbiAgc2VsZWN0ZWRPcHRpb24sXHJcbiAgc2V0T3B0aW9uLFxyXG4gIC4uLnJlc3Rwcm9wc1xyXG59OiBJVG9nZ2xlSW5wdXQpID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5jb250YWluZXJ9IHsuLi5yZXN0cHJvcHN9PlxyXG4gICAgICB7b3B0aW9ucy5tYXAoKG9wdGlvbikgPT4gKFxyXG4gICAgICAgIDxidXR0b25cclxuICAgICAgICAgIGtleT17b3B0aW9ufVxyXG4gICAgICAgICAgZGF0YS10ZXN0aWQ9e29wdGlvbn1cclxuICAgICAgICAgIGNsYXNzTmFtZT17c3R5bGVzLnRvZ2dsZUJ1dHRvbn1cclxuICAgICAgICAgIG9uQ2xpY2s9eyhlKSA9PiB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgc2V0T3B0aW9uKG9wdGlvbik7XHJcbiAgICAgICAgICB9fT5cclxuICAgICAgICAgIHtzZWxlY3RlZE9wdGlvbiA9PT0gb3B0aW9uICYmIChcclxuICAgICAgICAgICAgPExvZ29cclxuICAgICAgICAgICAgICBjbGFzc05hbWU9e3N0eWxlcy5jaGVja0JveExvZ299XHJcbiAgICAgICAgICAgICAgc3JjTG9nbz17Jy9jaGVja21hcmsuc3ZnJ31cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICl9XHJcbiAgICAgICAgICB7b3B0aW9ufVxyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICApKX1cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUb2dnbGVJbnB1dDtcclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0E7QUFBQTtBQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFFQTtBQUFBO0FBQUFDLGtCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQTtBQUFBO0FBQUFFLEtBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUEyQjtBQUFBLE1BQUFHLFNBQUE7QUFBQSxJQUFBQyxZQUFBO0FBQUEsSUFBQUMsS0FBQSxHQUFBUCxNQUFBLENBQUFRLE9BQUEsQ0FBQUMsYUFBQTtBQUFBLFNBQUFDLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFB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