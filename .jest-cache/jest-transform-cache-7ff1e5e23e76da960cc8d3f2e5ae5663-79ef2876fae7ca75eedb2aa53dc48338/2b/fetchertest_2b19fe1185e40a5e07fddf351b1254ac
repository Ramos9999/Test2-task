c624b2b2d7a5885e8e0e19a52a909c39
"use strict";

var _fetcher = require("./fetcher");
global.fetch = jest.fn(() => Promise.resolve({
  json: () => Promise.resolve({
    data: 'mocked data'
  })
}));
describe('recordFetcher', () => {
  it('shoudl retern correct response', async () => {
    expect(await (0, _fetcher.recordFetcher)('users', 'diab', 10, 30)).toEqual({
      data: 'mocked data'
    });
  });
  it('shoudl retern correct response without sendin per page param', async () => {
    expect(await (0, _fetcher.recordFetcher)('users', 'diab', 10)).toEqual({
      data: 'mocked data'
    });
  });
});
describe('recordFetcher', () => {
  it('shoudl retern correct response', async () => {
    expect(await (0, _fetcher.fetcher)('users')).toEqual({
      data: 'mocked data'
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZmV0Y2hlciIsInJlcXVpcmUiLCJnbG9iYWwiLCJmZXRjaCIsImplc3QiLCJmbiIsIlByb21pc2UiLCJyZXNvbHZlIiwianNvbiIsImRhdGEiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwicmVjb3JkRmV0Y2hlciIsInRvRXF1YWwiLCJmZXRjaGVyIl0sInNvdXJjZXMiOlsiZmV0Y2hlci50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWNvcmRGZXRjaGVyLCBmZXRjaGVyIH0gZnJvbSAnLi9mZXRjaGVyJztcclxuXHJcbmdsb2JhbC5mZXRjaCA9IGplc3QuZm4oKCkgPT5cclxuICBQcm9taXNlLnJlc29sdmUoe1xyXG4gICAganNvbjogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YTogJ21vY2tlZCBkYXRhJyB9KSxcclxuICB9KSxcclxuKSBhcyBqZXN0Lk1vY2s7XHJcblxyXG5kZXNjcmliZSgncmVjb3JkRmV0Y2hlcicsICgpID0+IHtcclxuICBpdCgnc2hvdWRsIHJldGVybiBjb3JyZWN0IHJlc3BvbnNlJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgZXhwZWN0KGF3YWl0IHJlY29yZEZldGNoZXIoJ3VzZXJzJywgJ2RpYWInLCAxMCwgMzApKS50b0VxdWFsKHtcclxuICAgICAgZGF0YTogJ21vY2tlZCBkYXRhJyxcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnc2hvdWRsIHJldGVybiBjb3JyZWN0IHJlc3BvbnNlIHdpdGhvdXQgc2VuZGluIHBlciBwYWdlIHBhcmFtJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgZXhwZWN0KGF3YWl0IHJlY29yZEZldGNoZXIoJ3VzZXJzJywgJ2RpYWInLCAxMCkpLnRvRXF1YWwoe1xyXG4gICAgICBkYXRhOiAnbW9ja2VkIGRhdGEnLFxyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuZGVzY3JpYmUoJ3JlY29yZEZldGNoZXInLCAoKSA9PiB7XHJcbiAgaXQoJ3Nob3VkbCByZXRlcm4gY29ycmVjdCByZXNwb25zZScsIGFzeW5jICgpID0+IHtcclxuICAgIGV4cGVjdChhd2FpdCBmZXRjaGVyKCd1c2VycycpKS50b0VxdWFsKHtcclxuICAgICAgZGF0YTogJ21vY2tlZCBkYXRhJyxcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUFBLFFBQUEsR0FBQUMsT0FBQTtBQUVBQyxNQUFNLENBQUNDLEtBQUssR0FBR0MsSUFBSSxDQUFDQyxFQUFFLENBQUMsTUFDckJDLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDO0VBQ2RDLElBQUksRUFBRUEsQ0FBQSxLQUFNRixPQUFPLENBQUNDLE9BQU8sQ0FBQztJQUFFRSxJQUFJLEVBQUU7RUFBYyxDQUFDO0FBQ3JELENBQUMsQ0FDSCxDQUFjO0FBRWRDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsTUFBTTtFQUM5QkMsRUFBRSxDQUFDLGdDQUFnQyxFQUFFLFlBQVk7SUFDL0NDLE1BQU0sQ0FBQyxNQUFNLElBQUFDLHNCQUFhLEVBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQ0MsT0FBTyxDQUFDO01BQzNETCxJQUFJLEVBQUU7SUFDUixDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7RUFFRkUsRUFBRSxDQUFDLDhEQUE4RCxFQUFFLFlBQVk7SUFDN0VDLE1BQU0sQ0FBQyxNQUFNLElBQUFDLHNCQUFhLEVBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDQyxPQUFPLENBQUM7TUFDdkRMLElBQUksRUFBRTtJQUNSLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGQyxRQUFRLENBQUMsZUFBZSxFQUFFLE1BQU07RUFDOUJDLEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRSxZQUFZO0lBQy9DQyxNQUFNLENBQUMsTUFBTSxJQUFBRyxnQkFBTyxFQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUNELE9BQU8sQ0FBQztNQUNyQ0wsSUFBSSxFQUFFO0lBQ1IsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119