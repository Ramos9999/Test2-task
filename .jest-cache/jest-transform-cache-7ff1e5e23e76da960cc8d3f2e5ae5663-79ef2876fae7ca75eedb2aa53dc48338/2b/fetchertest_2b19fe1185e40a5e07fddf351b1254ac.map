{"version":3,"names":["_fetcher","require","global","fetch","jest","fn","Promise","resolve","json","data","describe","it","expect","recordFetcher","toEqual","fetcher"],"sources":["fetcher.test.tsx"],"sourcesContent":["import { recordFetcher, fetcher } from './fetcher';\r\n\r\nglobal.fetch = jest.fn(() =>\r\n  Promise.resolve({\r\n    json: () => Promise.resolve({ data: 'mocked data' }),\r\n  }),\r\n) as jest.Mock;\r\n\r\ndescribe('recordFetcher', () => {\r\n  it('shoudl retern correct response', async () => {\r\n    expect(await recordFetcher('users', 'diab', 10, 30)).toEqual({\r\n      data: 'mocked data',\r\n    });\r\n  });\r\n\r\n  it('shoudl retern correct response without sendin per page param', async () => {\r\n    expect(await recordFetcher('users', 'diab', 10)).toEqual({\r\n      data: 'mocked data',\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('recordFetcher', () => {\r\n  it('shoudl retern correct response', async () => {\r\n    expect(await fetcher('users')).toEqual({\r\n      data: 'mocked data',\r\n    });\r\n  });\r\n});\r\n"],"mappings":";;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAEAC,MAAM,CAACC,KAAK,GAAGC,IAAI,CAACC,EAAE,CAAC,MACrBC,OAAO,CAACC,OAAO,CAAC;EACdC,IAAI,EAAEA,CAAA,KAAMF,OAAO,CAACC,OAAO,CAAC;IAAEE,IAAI,EAAE;EAAc,CAAC;AACrD,CAAC,CACH,CAAc;AAEdC,QAAQ,CAAC,eAAe,EAAE,MAAM;EAC9BC,EAAE,CAAC,gCAAgC,EAAE,YAAY;IAC/CC,MAAM,CAAC,MAAM,IAAAC,sBAAa,EAAC,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAACC,OAAO,CAAC;MAC3DL,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFE,EAAE,CAAC,8DAA8D,EAAE,YAAY;IAC7EC,MAAM,CAAC,MAAM,IAAAC,sBAAa,EAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC,CAACC,OAAO,CAAC;MACvDL,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFC,QAAQ,CAAC,eAAe,EAAE,MAAM;EAC9BC,EAAE,CAAC,gCAAgC,EAAE,YAAY;IAC/CC,MAAM,CAAC,MAAM,IAAAG,gBAAO,EAAC,OAAO,CAAC,CAAC,CAACD,OAAO,CAAC;MACrCL,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}