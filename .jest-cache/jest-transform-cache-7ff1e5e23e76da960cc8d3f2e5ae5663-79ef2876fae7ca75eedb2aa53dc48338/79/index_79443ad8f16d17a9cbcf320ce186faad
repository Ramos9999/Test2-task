5867e5e76ca59fb9dd3c7265265fd35a
/* istanbul ignore next */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var
/* istanbul ignore next */
_fetcher = require("../../utils/fetcher");
var
/* istanbul ignore next */
_react = _interopRequireWildcard(require("react"));
var
/* istanbul ignore next */
_BadgesModule = _interopRequireDefault(require("./Badges.module.scss"));
/* istanbul ignore next */
var _jsxFileName = "C:\\Users\\DELL\\Desktop\\Test2-task\\components\\Badges\\index.tsx";
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var __jsx = _react.default.createElement;
function cov_b7qnqnwcv() {
  var path = "C:\\Users\\DELL\\Desktop\\Test2-task\\components\\Badges\\index.tsx";
  var hash = "69245ff7b37780ea7fbf5a3bbd035b0d56f721bc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DELL\\Desktop\\Test2-task\\components\\Badges\\index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "1": {
        start: {
          line: 7,
          column: 30
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "2": {
        start: {
          line: 8,
          column: 35
        },
        end: {
          line: 8,
          column: 59
        }
      },
      "3": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 15,
          column: 9
        }
      },
      "4": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "5": {
        start: {
          line: 12,
          column: 6
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "6": {
        start: {
          line: 13,
          column: 6
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "7": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 32,
          column: 4
        }
      },
      "8": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 25,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 15
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 77
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 10,
            column: 13
          }
        },
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 15,
            column: 3
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 32
          }
        },
        loc: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 22,
            column: 23
          }
        },
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 25,
            column: 18
          }
        },
        line: 23
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 7
          },
          end: {
            line: 30,
            column: 7
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 27,
            column: 11
          }
        }, {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 13
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 7
          },
          end: {
            line: 19,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 7
          },
          end: {
            line: 19,
            column: 17
          }
        }, {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 38
          }
        }],
        line: 19
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "69245ff7b37780ea7fbf5a3bbd035b0d56f721bc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b7qnqnwcv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b7qnqnwcv();
cov_b7qnqnwcv().s[0]++;
const Badges = ({
  languagesUrl
}) => {
  /* istanbul ignore next */
  cov_b7qnqnwcv().f[0]++;
  const [badges, setBadges] =
  /* istanbul ignore next */
  (cov_b7qnqnwcv().s[1]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)([]));
  const [errorCall, seErrorCall] =
  /* istanbul ignore next */
  (cov_b7qnqnwcv().s[2]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)(false));
  /* istanbul ignore next */
  cov_b7qnqnwcv().s[3]++;
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useEffect)(() => {
    /* istanbul ignore next */
    cov_b7qnqnwcv().f[1]++;
    cov_b7qnqnwcv().s[4]++;
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _fetcher.
    /* istanbul ignore next */
    fetcher)(languagesUrl).then(res => {
      /* istanbul ignore next */
      cov_b7qnqnwcv().f[2]++;
      cov_b7qnqnwcv().s[5]++;
      seErrorCall(Object.keys(res).includes('message'));
      /* istanbul ignore next */
      cov_b7qnqnwcv().s[6]++;
      setBadges(Object.keys(res));
    });
  }, []);
  /* istanbul ignore next */
  cov_b7qnqnwcv().s[7]++;
  return /* istanbul ignore next */__jsx(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    className:
    /* istanbul ignore next */
    _BadgesModule.
    /* istanbul ignore next */
    default.container,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18,
      columnNumber: 5
    }
  },
  /* istanbul ignore next */
  (cov_b7qnqnwcv().b[1][0]++, !errorCall) &&
  /* istanbul ignore next */
  (cov_b7qnqnwcv().b[1][1]++, badges.length > 0) ?
  /* istanbul ignore next */
  (cov_b7qnqnwcv().b[0][0]++,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  _react.default.Fragment,
  /* istanbul ignore next */
  null,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "span",
  /* istanbul ignore next */
  {
    className:
    /* istanbul ignore next */
    _BadgesModule.
    /* istanbul ignore next */
    default.tag,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 21,
      columnNumber: 11
    }
  },
  /* istanbul ignore next */
  "Badges:"), badges.map(badge => {
    /* istanbul ignore next */
    cov_b7qnqnwcv().f[3]++;
    cov_b7qnqnwcv().s[8]++;
    return /* istanbul ignore next */__jsx(
    /* istanbul ignore next */
    "div",
    /* istanbul ignore next */
    {
      key: badge,
      className:
      /* istanbul ignore next */
      _BadgesModule.
      /* istanbul ignore next */
      default.badge,
      __self: void 0,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 23,
        columnNumber: 13
      }
    }, badge);
  }))) :
  /* istanbul ignore next */
  (cov_b7qnqnwcv().b[0][1]++,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  _react.default.Fragment,
  /* istanbul ignore next */
  null)));
};
/* istanbul ignore next */
var _default = Badges;
/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,